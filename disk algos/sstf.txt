#include <stdio.h>
#include <stdlib.h>

void calculateDifference(int request[], int head, int diff[][2], int n) {
    for (int i = 0; i < n; i++) {
        diff[i][0] = abs(head - request[i]);
    }
}

int findMin(int diff[][2], int n) {
    int index = -1;
    int minimum = 1e9;

    for (int i = 0; i < n; i++) {
        if (!diff[i][1] && minimum > diff[i][0]) {
            minimum = diff[i][0];
            index = i;
        }
    }
    return index;
}

void shortestSeekTimeFirst(int request[], int head, int n) {
    if (n == 0) return;

    int diff[n][2] = { {0, 0} };
    int seekCount = 0;
    int seekSequence[n + 1];

    for (int i = 0; i < n + 1; i++) {
        seekSequence[i] = 0;
    }

    for (int i = 0; i < n; i++) {
        seekSequence[i] = head;
        calculateDifference(request, head, diff, n);
        int index = findMin(diff, n);
        diff[index][1] = 1;
        seekCount += diff[index][0];
        head = request[index];
    }
    seekSequence[n] = head;

    printf("Total number of seek operations = %d\n", seekCount);
    printf("Seek sequence is:\n");
    for (int i = 0; i <= n; i++) {
        printf("%d\n", seekSequence[i]);
    }
}

int main() {
    int n = 8;
    int proc[] = {176, 79, 34, 60, 92, 11, 41, 114};

    shortestSeekTimeFirst(proc, 50, n);

    return 0;
}
